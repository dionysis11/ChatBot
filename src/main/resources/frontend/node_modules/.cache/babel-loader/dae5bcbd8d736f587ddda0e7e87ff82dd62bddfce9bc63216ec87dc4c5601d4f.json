{"ast":null,"code":"var _jsxFileName = \"/Users/dionysisglytsos/Desktop/Repositories/chatbot/src/main/resources/frontend/src/components/Message.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  text,\n  user\n}) => {\n  _s();\n  const logoUrl = process.env.PUBLIC_URL + '/Vodafone-Symbol1.png'; // Reference the image from the public folder\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    if (!user) {\n      let first = true;\n      let currentIndex = 0;\n      const typingInterval = setInterval(() => {\n        currentIndex++;\n        if (first) {\n          setDisplayedText(prev => text[0] + prev + text[currentIndex]);\n          first = false;\n        } else {\n          setDisplayedText(prev => prev + text[currentIndex]);\n        }\n        if (currentIndex > text.length - 2) {\n          clearInterval(typingInterval);\n        }\n      }, 40);\n      return () => clearInterval(typingInterval);\n    } else {\n      setDisplayedText(text);\n    }\n  }, [text, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-wrapper\",\n    children: [!user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/Vodafone-Symbol1.png`,\n        alt: \"Bot Avatar\",\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${user ? 'user-message' : 'bot-message'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${user ? 'message-user-container' : 'message-container'}`,\n        children: displayedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-container user-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/user-image.png`,\n        alt: \"User Avatar\",\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Message, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Message","text","user","_s","logoUrl","process","env","PUBLIC_URL","displayedText","setDisplayedText","first","currentIndex","typingInterval","setInterval","prev","length","clearInterval","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dionysisglytsos/Desktop/Repositories/chatbot/src/main/resources/frontend/src/components/Message.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Message.css';\n\nconst Message = ({ text, user }) => {\n    const logoUrl = process.env.PUBLIC_URL + '/Vodafone-Symbol1.png'; // Reference the image from the public folder\n    const [displayedText, setDisplayedText] = useState('');\n    useEffect(() => {\n        if (!user) {\n            let first = true;\n            let currentIndex = 0;\n\n            const typingInterval = setInterval(() => {\n                currentIndex++;\n                if (first) {\n                    setDisplayedText((prev) => text[0] + prev + text[currentIndex]);\n                    first = false;\n                } else {\n                    setDisplayedText((prev) => prev + text[currentIndex]);\n                }\n\n                if (currentIndex > text.length - 2) {\n                    clearInterval(typingInterval);\n                }\n            }, 40);\n\n            return () => clearInterval(typingInterval);\n        } else {\n            setDisplayedText(text);\n    }\n    }, [text, user]);\n\n    return (\n        <div className=\"message-wrapper\">\n            {!user && (\n                <div className=\"avatar-container\">\n                    <img\n                        src={`${process.env.PUBLIC_URL}/Vodafone-Symbol1.png`}\n                        alt=\"Bot Avatar\"\n                        className=\"avatar\"\n                    />\n                </div>\n            )}\n            <div className={`message ${user ? 'user-message' : 'bot-message'}`}>\n                <div className={`${user ? 'message-user-container' : 'message-container'}`}>\n                    {displayedText}\n                </div>\n            </div>\n            {user && (\n                <div className=\"avatar-container user-image\">\n                    <img\n                        src={`${process.env.PUBLIC_URL}/user-image.png`}\n                        alt=\"User Avatar\"\n                        className=\"avatar\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n\n\n};\n\nexport default Message;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}